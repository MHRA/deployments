apiVersion: apps/v1
kind: Deployment
metadata:
  creationTimestamp: null
  labels:
    app: prometheus
    chart: prometheus-11.16.2
    component: server
    heritage: Helm
    release: prometheus
  name: prometheus
  namespace: istio-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
      component: server
      release: prometheus
  strategy: {}
  template:
    metadata:
      annotations:
        prometheus.io/path: /stats/prometheus
        prometheus.io/port: "15020"
        prometheus.io/scrape: "true"
        sidecar.istio.io/status: '{"initContainers":["istio-init"],"containers":["istio-proxy"],"volumes":["istio-envoy","istio-data","istio-podinfo","istio-token","istiod-ca-cert"],"imagePullSecrets":null}'
        traffic.sidecar.istio.io/includeInboundPorts: "" # do not intercept any inbound ports
        traffic.sidecar.istio.io/includeOutboundIPRanges: "" # do not intercept any outbound traffic
        # configure an env variable `OUTPUT_CERTS` to write certificates to the given folder
        proxy.istio.io/config: |
          proxyMetadata:
            OUTPUT_CERTS: /etc/istio-output-certs
        sidecar.istio.io/userVolumeMount: '[{"name": "istio-certs", "mountPath": "/etc/istio-output-certs"}]' # mount the shared volume at sidecar proxy
      creationTimestamp: null
      labels:
        app: prometheus
        chart: prometheus-11.16.2
        component: server
        heritage: Helm
        istio.io/rev: default
        release: prometheus
        security.istio.io/tlsMode: istio
        service.istio.io/canonical-name: prometheus
        service.istio.io/canonical-revision: latest
    spec:
      containers:
        - args:
            - --volume-dir=/etc/config
            - --webhook-url=http://127.0.0.1:9090/-/reload
          image: jimmidyson/configmap-reload:v0.4.0
          imagePullPolicy: IfNotPresent
          name: prometheus-server-configmap-reload
          resources: {}
          volumeMounts:
            - mountPath: /etc/config
              name: config-volume
              readOnly: true
        - args:
            - --storage.tsdb.retention.time=15d
            - --config.file=/etc/config/prometheus.yml
            - --storage.tsdb.path=/data
            - --web.console.libraries=/etc/prometheus/console_libraries
            - --web.console.templates=/etc/prometheus/consoles
            - --web.enable-lifecycle
          image: prom/prometheus:v2.21.0
          imagePullPolicy: IfNotPresent
          livenessProbe:
            failureThreshold: 3
            httpGet:
              path: /app-health/prometheus-server/livez
              port: 15020
            initialDelaySeconds: 30
            periodSeconds: 15
            successThreshold: 1
            timeoutSeconds: 30
          name: prometheus-server
          ports:
            - containerPort: 9090
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /app-health/prometheus-server/readyz
              port: 15020
            periodSeconds: 5
            successThreshold: 1
            timeoutSeconds: 30
          resources: {}
          volumeMounts:
            - mountPath: /etc/config
              name: config-volume
            - mountPath: /data
              name: storage-volume
            - mountPath: /etc/prom-certs/
              name: istio-certs
        - args:
            - proxy
            - sidecar
            - --domain
            - $(POD_NAMESPACE).svc.cluster.local
            - --serviceCluster
            - prometheus.$(POD_NAMESPACE)
            - --proxyLogLevel=warning
            - --proxyComponentLogLevel=misc:error
            - --log_output_level=default:info
            - --concurrency
            - "2"
          env:
            - name: JWT_POLICY
              value: third-party-jwt
            - name: PILOT_CERT_PROVIDER
              value: istiod
            - name: CA_ADDR
              value: istiod.istio-system.svc:15012
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: INSTANCE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: SERVICE_ACCOUNT
              valueFrom:
                fieldRef:
                  fieldPath: spec.serviceAccountName
            - name: HOST_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            - name: CANONICAL_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['service.istio.io/canonical-name']
            - name: CANONICAL_REVISION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['service.istio.io/canonical-revision']
            - name: PROXY_CONFIG
              value: |
                {}
            - name: ISTIO_META_POD_PORTS
              value: |-
                [
                    {"containerPort":9090}
                ]
            - name: ISTIO_META_APP_CONTAINERS
              value: prometheus-server-configmap-reload,prometheus-server
            - name: ISTIO_META_CLUSTER_ID
              value: Kubernetes
            - name: ISTIO_META_INTERCEPTION_MODE
              value: REDIRECT
            - name: ISTIO_META_WORKLOAD_NAME
              value: prometheus
            - name: ISTIO_META_OWNER
              value: kubernetes://apis/apps/v1/namespaces/istio-system/deployments/prometheus
            - name: ISTIO_META_MESH_ID
              value: cluster.local
            - name: TRUST_DOMAIN
              value: cluster.local
            - name: ISTIO_KUBE_APP_PROBERS
              value: '{"/app-health/prometheus-server/livez":{"httpGet":{"path":"/-/healthy","port":9090},"timeoutSeconds":30},"/app-health/prometheus-server/readyz":{"httpGet":{"path":"/-/ready","port":9090},"timeoutSeconds":30}}'
          image: docker.io/istio/proxyv2:1.9.2
          imagePullPolicy: Always
          name: istio-proxy
          ports:
            - containerPort: 15090
              name: http-envoy-prom
              protocol: TCP
          readinessProbe:
            failureThreshold: 30
            httpGet:
              path: /healthz/ready
              port: 15021
            initialDelaySeconds: 1
            periodSeconds: 2
            timeoutSeconds: 3
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: true
            runAsGroup: 1337
            runAsNonRoot: true
            runAsUser: 1337
          volumeMounts:
            - mountPath: /var/run/secrets/istio
              name: istiod-ca-cert
            - mountPath: /var/lib/istio/data
              name: istio-data
            - mountPath: /etc/istio/proxy
              name: istio-envoy
            - mountPath: /var/run/secrets/tokens
              name: istio-token
            - mountPath: /etc/istio/pod
              name: istio-podinfo
      initContainers:
        - args:
            - istio-iptables
            - -p
            - "15001"
            - -z
            - "15006"
            - -u
            - "1337"
            - -m
            - REDIRECT
            - -i
            - "*"
            - -x
            - ""
            - -b
            - "*"
            - -d
            - 15090,15021,15020
          image: docker.io/istio/proxyv2:1.9.2
          imagePullPolicy: Always
          name: istio-init
          resources:
            limits:
              cpu: "2"
              memory: 1Gi
            requests:
              cpu: 100m
              memory: 128Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              add:
                - NET_ADMIN
                - NET_RAW
              drop:
                - ALL
            privileged: false
            readOnlyRootFilesystem: false
            runAsGroup: 0
            runAsNonRoot: false
            runAsUser: 0
      securityContext:
        fsGroup: 1337
        runAsGroup: 65534
        runAsNonRoot: true
        runAsUser: 65534
      serviceAccountName: prometheus
      terminationGracePeriodSeconds: 300
      volumes:
        - emptyDir:
            medium: Memory
          name: istio-envoy
        - emptyDir:
            medium: Memory
          name: istio-certs
        - emptyDir: {}
          name: istio-data
        - downwardAPI:
            items:
              - fieldRef:
                  fieldPath: metadata.labels
                path: labels
              - fieldRef:
                  fieldPath: metadata.annotations
                path: annotations
              - path: cpu-limit
                resourceFieldRef:
                  containerName: istio-proxy
                  divisor: 1m
                  resource: limits.cpu
              - path: cpu-request
                resourceFieldRef:
                  containerName: istio-proxy
                  divisor: 1m
                  resource: requests.cpu
          name: istio-podinfo
        - name: istio-token
          projected:
            sources:
              - serviceAccountToken:
                  audience: istio-ca
                  expirationSeconds: 43200
                  path: istio-token
        - configMap:
            name: istio-ca-root-cert
          name: istiod-ca-cert
        - configMap:
            name: prometheus
          name: config-volume
        - emptyDir: {}
          name: storage-volume
status: {}
---
